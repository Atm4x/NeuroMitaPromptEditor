/* frontend/src/styles/EditorPage.css */
.editorPage {
  display: flex;
  flex-direction: column;
  height: 100vh; /* Full viewport height */
  background-color: var(--bg-main);
  color: var(--text-primary);
  overflow: hidden; /* Prevent body scrollbars */
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 15px;
  background-color: var(--bg-header);
  border-bottom: 1px solid var(--border-color);
  flex-shrink: 0; /* Header should not shrink */
}

.headerTitle {
  font-size: 1.4em;
  margin: 0;
  font-weight: 600;
}

.headerActions {
  display: flex;
  gap: 10px;
}

.headerActions button {
  padding: 6px 12px;
  background-color: var(--bg-button-accent);
  color: var(--text-button-accent);
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-weight: 500;
  transition: background-color 0.2s ease;
}

.headerActions button:hover:not(:disabled) {
  background-color: var(--bg-button-accent-hover);
}

.headerActions button:disabled {
  background-color: var(--bg-button-disabled);
  color: var(--text-button-disabled);
  cursor: not-allowed;
}

.pageStatus {
  font-size: 0.9em;
  padding: 6px 0;
  margin-right: 10px;
}
.pageStatus.loading {
  color: var(--info-color);
}
.pageStatus.error {
  color: var(--error-color);
  font-weight: bold;
}


/* Desktop Layout Specifics */
.desktopContentWrapper {
  display: flex;
  flex-direction: column;
  flex-grow: 1; /* Takes remaining vertical space */
  overflow: hidden; /* Important for nested scroll/flex behavior */
}

.mainContent {
  display: flex;
  flex-grow: 1;
  overflow: hidden; /* Children panels should manage their own scroll */
}

.leftPanelContainer,
.rightPanelContainer {
  width: 280px; /* Example fixed width */
  flex-shrink: 0;
  overflow-y: auto;
  background-color: var(--bg-panel);
  border-right: 1px solid var(--border-color); /* For left panel */
  /* border-left: 1px solid var(--border-color); For right panel if needed */
}
.rightPanelContainer {
   border-left: 1px solid var(--border-color);
   border-right: none;
}


.centerPanelContainer {
  flex-grow: 1;
  display: flex; /* To allow TabManager to fill space */
  flex-direction: column; /* TabManager is usually column-oriented */
  overflow: hidden;
}

.logPanelResizeHandle {
  height: 8px;
  background-color: var(--border-color);
  cursor: ns-resize;
  flex-shrink: 0;
  transition: background-color 0.2s ease;
}
.logPanelResizeHandle:hover {
  background-color: var(--accent-color);
}

.bottomPanelContainer {
  flex-shrink: 0; /* Log panel should not shrink beyond its set height */
  overflow: hidden; /* Children should manage scrolling */
  /* height is set by style prop from state in EditorPage.js */
  background-color: var(--bg-panel); /* Match panel background */
}


/* Mobile Layout Specifics */
.swipeViewContainer {
  flex-grow: 1;
  display: flex;
  overflow: hidden; /* Crucial for swipe effect */
  position: relative; /* For absolute positioning of swipePage */
}

.swipePage {
  width: 100%;
  height: 100%;
  flex-shrink: 0;
  overflow-y: auto; /* Allow individual panels to scroll */
  transition: transform 0.3s ease-out;
  position: absolute; /* All pages occupy same space, transform moves them */
  top: 0;
  left: 0;
  background-color: var(--bg-main); /* Ensure background for pages */
}
/* Ensure child components fill the swipePage */
.swipePage > div { /* e.g. FileTreePanel, TabManager etc. */
    height: 100%;
    display: flex;
    flex-direction: column;
}


.mobileToggleBar {
  display: flex;
  justify-content: space-around;
  padding: 8px 0;
  background-color: var(--bg-header);
  border-top: 1px solid var(--border-color);
  flex-shrink: 0;
}

.mobileToggleBar button {
  padding: 8px 5px; /* Reduced padding for mobile */
  background-color: transparent;
  color: var(--text-secondary);
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.85em; /* Smaller font for mobile tabs */
  flex-grow: 1; /* Distribute space */
  text-align: center;
}

.mobileToggleBar button.active {
  background-color: var(--accent-color-subtle);
  color: var(--accent-color);
  font-weight: bold;
}

/* Loading/Error text styling */
.loading-text, .error-text {
    padding: 20px;
    text-align: center;
    font-size: 1.1em;
}
.error-text {
    color: var(--error-color);
}


.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 15px; /* Adjusted padding */
  background-color: var(--bg-secondary);
  border-bottom: 1px solid var(--border-color);
  height: 50px; /* Fixed height for header */
  flex-shrink: 0;
  box-sizing: border-box;
}

.header-left {
  display: flex;
  align-items: center;
}

.headerTitle {
  font-size: 1.3em;
  margin: 0;
  color: var(--text-primary);
}

.currentUserDisplay {
  font-size: 0.85em;
  color: var(--text-secondary);
  margin-left: 15px;
  background-color: var(--bg-tertiary);
  padding: 3px 8px;
  border-radius: 3px;
}

.headerActions {
  display: flex;
  align-items: center;
  gap: 8px; /* Spacing between buttons */
}

.headerActions button {
  padding: 5px 10px; /* Slightly smaller buttons for header */
  font-size: 0.9em;
}

.headerActions .pageStatus {
  font-size: 0.85em;
  padding: 3px 8px;
  border-radius: 3px;
  margin-right: 5px;
}
.headerActions .pageStatus.loading {
  background-color: var(--bg-tertiary);
  color: var(--warning-color);
}
.headerActions .pageStatus.error {
  background-color: var(--error-bg);
  color: var(--error-color);
}

.app-loading-spinner {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  font-size: 1.5em;
  color: var(--text-secondary);
  background-color: var(--bg-primary);
}

/* Responsive adjustments for header actions on mobile */
@media (max-width: 768px) {
  .headerTitle {
    font-size: 1.2em;
  }
  .headerActions button {
    padding: 6px 8px; /* Slightly reduce padding */
    font-size: 0.9em; /* Slightly reduce font size */
  }
  .headerActions .pageStatus {
    display: none; /* Hide status text on small mobile to save space */
  }
}
@media (max-width: 480px) {
    .headerActions button span.buttonText { /* If we wrap text in span to hide on mobile */
        display: none;
    }
     .headerActions button {
        min-width: 36px; /* Ensure buttons have some width for tap target if only icon */
     }
}